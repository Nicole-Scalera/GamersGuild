/* THIS IS AN EXAMPLE FILE, DO NOT APPLY
 * IT TO LITERALLY ANYTHING! */

/* This file basically shows the cascading order of CSS. */


/* ------------ */

/* Least specific element is an element tag */
h1 {

    /* This selects ALL of the h1 elements on the page. */
}


/* Next level of specificity is a class */

.heading {}


/* Next level of specificity is an ID */
/* THere can only ever be one UNIQUE ID on a page. */

#title {

    /* This selects only the title with an ID of "title" */

}

/* After that, there's a whole bunch of rules and routines
for things like pseudo classes, etc. */

.heading:hover {

    /* This represents the HOVER STATE of a heading.
    :hover is technically a pseudo class. */
}

.heading #title {

    /* This would select all of the headings with an ID of "title" */
}

/* Most specific level is :root, but that's JUST for HTML */


/* ------------ */

/* That second h2 will take precendent over the first h2. */

h2 {
    font-size: 10pt;
    color: red;
}

h2 {
    color: blue;
}

/* The end result:
    - Color would be changed from RED to BLUE.
    - Font size would stay the same, because it's not addressed.

    You can think of it as a PATCH and a PUT (not exactly but similar):

        - PATCH and a PUT are both different versions of updates.
        - PUT replaces an entire object.
        - PATCH is a surgical replacement of all of the pieces you send.
        You can only replace what parts you put in the request.
        
        - This is HTTP, not CSS< but the concepts are similar.

*/